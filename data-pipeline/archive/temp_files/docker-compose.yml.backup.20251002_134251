# ac215e115groupproject/docker-compose.yml
# Docker Compose configuration for Rice Market AI System local development
# This setup mirrors the production Cloud SQL environment for testing

version: '3.8'

services:
  # PostgreSQL database matching Cloud SQL configuration
  postgres:
    image: postgres:15-alpine  # Using same version as Cloud SQL
    container_name: rice_market_postgres
    environment:
      POSTGRES_USER: rice_admin
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-localdev123}
      POSTGRES_DB: rice_market_db
      # PostgreSQL configuration for development
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --locale=en_US.utf8"
      # Connection pool settings matching Cloud SQL defaults
      POSTGRES_MAX_CONNECTIONS: 100
      POSTGRES_SHARED_BUFFERS: 256MB
    ports:
      - "5433:5432"
    volumes:
      # Mount the schema file for initialization
      - ./data-pipeline/schema/postgresql_ddl.sql:/docker-entrypoint-initdb.d/01_schema.sql:ro
      # Mount a script to create read-only user for read replica simulation
      - ./data-pipeline/scripts/02_read_replica_setup.sql:/docker-entrypoint-initdb.d/02_read_replica.sql:ro
      # Persistent data volume
      - postgres_data:/var/lib/postgresql/data
      # Custom PostgreSQL configuration
      - ./data-pipeline/config/postgresql.conf:/etc/postgresql/postgresql.conf:ro
    command: >
      postgres
      -c shared_preload_libraries='pg_stat_statements'
      -c pg_stat_statements.track=all
      -c log_statement='all'
      -c log_duration=on
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U rice_admin -d rice_market_db"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - rice_market_network

  # pgAdmin for database management and monitoring
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: rice_market_pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@ricemarket.local
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD:-admin123}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: 'False'
    ports:
      - "5051:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - rice_market_network

  # Redis for caching (will be used with read replica pattern)
  redis:
    image: redis:7-alpine
    container_name: rice_market_redis
    ports:
      - "6380:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - rice_market_network

  # Adminer as lightweight alternative to pgAdmin
  adminer:
    image: adminer:latest
    container_name: rice_market_adminer
    ports:
      - "8081:8080"
    environment:
      ADMINER_DEFAULT_SERVER: postgres
      ADMINER_DESIGN: pepa-linha
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - rice_market_network

volumes:
  postgres_data:
    driver: local
  pgadmin_data:
    driver: local
  redis_data:
    driver: local

networks:
  rice_market_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.25.0.0/16
